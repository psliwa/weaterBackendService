<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
          http://www.springframework.org/schema/task
          http://www.springframework.org/schema/task/spring-task-3.0.xsd
          http://www.springframework.org/schema/aop
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/mvc
          http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
">
    <import resource="jdbc.xml" />
    
    <mvc:annotation-driven conversion-service="conversionService" />
    <context:property-placeholder location="classpath:config.properties" />
    <context:annotation-config />    
    
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
    </bean>
    
    <bean id="jsonMapper" class="org.codehaus.jackson.map.ObjectMapper" />
    
    <bean id="messageParser" class="pk.ip.weather.core.JsonMessageParser">
        <constructor-arg ref="jsonMapper" />
    </bean>
    
    <bean id="wundergroundService" class="pk.ip.weather.api.wunderground.WundergroundService">
        <constructor-arg ref="messageParser" />
        <constructor-arg value="${wunderground.apikey}" />
    </bean>
    
    <bean id="taskScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
    </bean>
    
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
    </bean>
    
    <task:scheduler id="taskScheduler" pool-size="4" />
    <task:executor id="taskExecutor" />
    
<!--    <task:scheduled-tasks scheduler="taskScheduler">
        <task:scheduled ref="dataCollectorTask" method="collectWeatherHistory" cron="0 0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45,48,51,54,57 * * * *" />
        <task:scheduled ref="dataCollectorTask" method="collestYesterdayHistory" cron="0 0 10,22 * * *" />
        <task:scheduled ref="dataCollectorTask" method="collectForecast" cron="0 0 1,7,13,19 * * *" />
    </task:scheduled-tasks>-->
    
    <bean id="weatherService" class="pk.ip.weather.service.WeatherServiceImpl">
        <constructor-arg ref="dataSource" />
    </bean>
    
    <bean id="dataCollectorTask" class="pk.ip.weather.task.DataCollectorTask">
        <constructor-arg ref="weatherService" />
        <constructor-arg ref="wundergroundService" />
    </bean>
    
    <bean id="controller" class="pk.ip.weather.web.controller.WeatherController">
        <constructor-arg ref="dataCollectorTask" />
        <constructor-arg ref="weatherService" />
    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="insert*" />
            <tx:method name="replace*" />
            <tx:method name="find*" read-only="true" />
        </tx:attributes>
    </tx:advice>
    
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* pk.ip.weather.service.*.*(..))" />
    </aop:config>

    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list merge="true">
                <ref bean="cityConverter" />
            </list>
        </property>
    </bean>
    
    <bean id="cityConverter" class="pk.ip.weather.web.converter.CityConverter">
        <constructor-arg ref="weatherService" />
    </bean>
    
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
        <property name="webBindingInitializer"> 
            <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer"> 
                <property name="conversionService" ref="conversionService" /> 
            </bean> 
        </property> 
    </bean> 
    
    <bean id="exceptionHandler" class="pk.ip.weather.web.HandlerExceptionResolverImpl">
        <constructor-arg ref="jsonView" />
    </bean>
</beans>
